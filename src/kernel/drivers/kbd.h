#pragma once

#include <stdint.h>
#include "arch/i686/isr.h"

typedef enum
{
    KEY_ESCAPE = 0x01,
    KEY_1 = 0x02,
    KEY_2 = 0x03,
    KEY_3 = 0x04,
    KEY_4 = 0x05,
    KEY_5 = 0x06,
    KEY_6 = 0x07,
    KEY_7 = 0x08,
    KEY_8 = 0x09,
    KEY_9 = 0x0A,
    KEY_0 = 0x0B,
    KEY_MINUS = 0x0C,
    KEY_EQUALS = 0x0D,
    KEY_BACKSPACE = 0x0E,
    KEY_TAB = 0x0F,
    KEY_Q = 0x10,
    KEY_W = 0x11,
    KEY_E = 0x12,
    KEY_R = 0x13,
    KEY_T = 0x14,
    KEY_Y = 0x15,
    KEY_U = 0x16,
    KEY_I = 0x17,
    KEY_O = 0x18,
    KEY_P = 0x19,
    KEY_OPEN_BRACKET = 0x1A,
    KEY_CLOSE_BRACKET = 0x1B,
    KEY_ENTER = 0x1C,
    KEY_LEFT_CONTROL = 0x1D,
    KEY_A = 0x1E,
    KEY_S = 0x1F,
    KEY_D = 0x20,
    KEY_F = 0x21,
    KEY_G = 0x22,
    KEY_H = 0x23,
    KEY_J = 0x24,
    KEY_K = 0x25,
    KEY_L = 0x26,
    KEY_SEMICOLON = 0x27,
    KEY_SINGLE_QUOTE = 0x28,
    KEY_BACK_QUOTE = 0x29,
    KEY_LEFT_SHIFT = 0x2A,
    KEY_BACKSLASH = 0x2B,
    KEY_Z = 0x2C,
    KEY_X = 0x2D,
    KEY_C = 0x2E,
    KEY_V = 0x2F,
    KEY_B = 0x30,
    KEY_N = 0x31,
    KEY_M = 0x32,
    KEY_COMMA = 0x33,
    KEY_PERIOD = 0x34,
    KEY_FORWARD_SLASH = 0x35,
    KEY_RIGHT_SHIFT = 0x36,
    KEY_LEFT_ALT = 0x38,
    KEY_SPACE = 0x39,
    KEY_CAPS_LOCK = 0x3A,
    KEY_F1 = 0x3B,
    KEY_F2 = 0x3C,
    KEY_F3 = 0x3D,
    KEY_F4 = 0x3E,
    KEY_F5 = 0x3F,
    KEY_F6 = 0x40,
    KEY_F7 = 0x41,
    KEY_F8 = 0x42,
    KEY_F9 = 0x43,
    KEY_F10 = 0x44,
    KEY_NUM_LOCK = 0x45,
    KEY_SCROLL_LOCK = 0x46,
    KEY_KP_7 = 0x47,
    KEY_KP_8 = 0x48,
    KEY_KP_9 = 0x49,
    KEY_KP_MINUS = 0x4A,
    KEY_KP_4 = 0x4B,
    KEY_KP_5 = 0x4C,
    KEY_KP_6 = 0x4D,
    KEY_KP_PLUS = 0x4E,
    KEY_KP_1 = 0x4F,
    KEY_KP_2 = 0x50,
    KEY_KP_3 = 0x51,
    KEY_KP_0 = 0x52,
    KEY_KP_PERIOD = 0x53,
    KEY_F11 = 0x57,
    KEY_F12 = 0x58,

    KEY_ESCAPE_RELEASED = 0x81,
    KEY_1_RELEASED = 0x82,
    KEY_2_RELEASED = 0x83,
    KEY_3_RELEASED = 0x84,
    KEY_4_RELEASED = 0x85,
    KEY_5_RELEASED = 0x86,
    KEY_6_RELEASED = 0x87,
    KEY_7_RELEASED = 0x88,
    KEY_8_RELEASED = 0x89,
    KEY_9_RELEASED = 0x8A,
    KEY_0_RELEASED = 0x8B,
    KEY_MINUS_RELEASED = 0x8C,
    KEY_EQUALS_RELEASED = 0x8D,
    KEY_BACKSPACE_RELEASED = 0x8E,
    KEY_TAB_RELEASED = 0x8F,
    KEY_Q_RELEASED = 0x90,
    KEY_W_RELEASED = 0x91,
    KEY_E_RELEASED = 0x92,
    KEY_R_RELEASED = 0x93,
    KEY_T_RELEASED = 0x94,
    KEY_Y_RELEASED = 0x95,
    KEY_U_RELEASED = 0x96,
    KEY_I_RELEASED = 0x97,
    KEY_O_RELEASED = 0x98,
    KEY_P_RELEASED = 0x99,
    KEY_OPEN_BRACKET_RELEASED = 0x9A,
    KEY_CLOSE_BRACKET_RELEASED = 0x9B,
    KEY_ENTER_RELEASED = 0x9C,
    KEY_LEFT_CONTROL_RELEASED = 0x9D,
    KEY_A_RELEASED = 0x9E,
    KEY_S_RELEASED = 0x9F,
    KEY_D_RELEASED = 0xA0,
    KEY_F_RELEASED = 0xA1,
    KEY_G_RELEASED = 0xA2,
    KEY_H_RELEASED = 0xA3,
    KEY_J_RELEASED = 0xA4,
    KEY_K_RELEASED = 0xA5,
    KEY_L_RELEASED = 0xA6,
    KEY_SEMICOLON_RELEASED = 0xA7,
    KEY_SINGLE_QUOTE_RELEASED = 0xA8,
    KEY_BACK_QUOTE_RELEASED = 0xA9,
    KEY_LEFT_SHIFT_RELEASED = 0xAA,
    KEY_BACKSLASH_RELEASED = 0xAB,
    KEY_Z_RELEASED = 0xAC,
    KEY_X_RELEASED = 0xAD,
    KEY_C_RELEASED = 0xAE,
    KEY_V_RELEASED = 0xAF,
    KEY_B_RELEASED = 0xB0,
    KEY_N_RELEASED = 0xB1,
    KEY_M_RELEASED = 0xB2,
    KEY_COMMA_RELEASED = 0xB3,
    KEY_PERIOD_RELEASED = 0xB4,
    KEY_FORWARD_SLASH_RELEASED = 0xB5,
    KEY_RIGHT_SHIFT_RELEASED = 0xB6,
    KEY_LEFT_ALT_RELEASED = 0xB8,
    KEY_SPACE_RELEASED = 0xB9,

    NOOP = 0xFF
} KBD_KEY;

void KBD_IRQ(Registers* regs);
uint8_t KBD_Key2Char(KBD_KEY key);
void KBD_ReadLine(char* out);
void KBD_ReadNumber(uint32_t* out);